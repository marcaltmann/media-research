# Generated by Django 5.0.3 on 2024-03-29 09:56

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('geonames_id', models.IntegerField(blank=True, null=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='MetadataKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('eastern_name_order', models.BooleanField(default=False)),
                ('gnd_id', models.CharField(blank=True, max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('D', 'Diverse'), ('N', 'Not specified')], default='N', max_length=1)),
                ('date_of_birth', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'people',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('gnd_id', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocationReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timecode', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.location')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=200)),
                ('media_type', models.CharField(default='video/mp4', max_length=100)),
                ('media_url', models.URLField(default='', max_length=300)),
                ('poster', models.ImageField(blank=True, default='', upload_to='')),
                ('pub_date', models.DateTimeField(null=True, verbose_name='date published')),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('public', models.BooleanField(default=True)),
                ('locations', models.ManyToManyField(through='archive.LocationReference', to='archive.location')),
            ],
        ),
        migrations.AddField(
            model_name='locationreference',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.resource'),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(default='')),
                ('resources', models.ManyToManyField(to='archive.resource')),
            ],
        ),
        migrations.CreateModel(
            name='CharFieldMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.metadatakey')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.resource')),
            ],
            options={
                'verbose_name_plural': 'char field metadata',
            },
        ),
        migrations.CreateModel(
            name='ResourceInvolvement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('INT', 'Interviewee'), ('ITR', 'Interviewer'), ('CAM', 'Camera'), ('SND', 'Sound'), ('EDT', 'Editor'), ('OTH', 'Other')], default='INT', max_length=3)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.person')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.resource')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='people',
            field=models.ManyToManyField(through='archive.ResourceInvolvement', to='archive.person'),
        ),
        migrations.CreateModel(
            name='TopicReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timecode', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.resource')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.topic')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='topics',
            field=models.ManyToManyField(through='archive.TopicReference', to='archive.topic'),
        ),
        migrations.CreateModel(
            name='Transcript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json', models.JSONField()),
                ('vtt', models.TextField()),
                ('language', models.CharField(max_length=5)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='archive.resource')),
            ],
        ),
    ]
