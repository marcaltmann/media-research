# Generated by Django 5.0.6 on 2024-06-23 15:30

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("entities", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MetadataKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="LocationReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timecode",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=10, null=True
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entities.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(default="", max_length=200, verbose_name="title"),
                ),
                (
                    "anon_title",
                    models.CharField(
                        default="", max_length=200, verbose_name="anonymized title"
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        default="video/mp4",
                        help_text="Enter MIME type e.g. 'video/mp4'.",
                        max_length=100,
                        verbose_name="media type",
                    ),
                ),
                (
                    "media_url",
                    models.URLField(
                        default="", max_length=300, verbose_name="media url"
                    ),
                ),
                (
                    "poster",
                    models.ImageField(
                        blank=True,
                        default="",
                        upload_to="",
                        verbose_name="poster image",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(null=True, verbose_name="date published"),
                ),
                (
                    "duration",
                    models.DurationField(
                        default=datetime.timedelta(0), verbose_name="duration"
                    ),
                ),
                ("public", models.BooleanField(default=True, verbose_name="public")),
                (
                    "locations",
                    models.ManyToManyField(
                        through="archive.LocationReference",
                        to="entities.location",
                        verbose_name="locations",
                    ),
                ),
            ],
            options={
                "verbose_name": "resource",
                "verbose_name_plural": "resources",
                "ordering": ["title"],
            },
        ),
        migrations.AddField(
            model_name="locationreference",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="archive.resource"
            ),
        ),
        migrations.CreateModel(
            name="EntityReference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timecodes",
                    models.JSONField(
                        default=list,
                        help_text="Enter timecodes in seconds as a comma separated list, e.g.: [124.3, 210.5]",
                        verbose_name="timecodes",
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entities.entity",
                        verbose_name="entity",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="archive.resource",
                        verbose_name="resource",
                    ),
                ),
            ],
            options={
                "verbose_name": "entity reference",
                "verbose_name_plural": "entity references",
            },
        ),
        migrations.CreateModel(
            name="CharFieldMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=200)),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="archive.metadatakey",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="archive.resource",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "char field metadata",
            },
        ),
        migrations.CreateModel(
            name="ResourceInvolvement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("INT", "Interviewee"),
                            ("ITR", "Interviewer"),
                            ("CAM", "Camera"),
                            ("SND", "Sound"),
                            ("EDT", "Editor"),
                            ("OTH", "Other"),
                        ],
                        default="INT",
                        max_length=3,
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="entities.person",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="archive.resource",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="resource",
            name="people",
            field=models.ManyToManyField(
                through="archive.ResourceInvolvement",
                to="entities.person",
                verbose_name="people",
            ),
        ),
        migrations.CreateModel(
            name="Transcript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "json",
                    models.JSONField(
                        default=list,
                        help_text="Paste the full transcript in JSON format.",
                        verbose_name="json file",
                    ),
                ),
                (
                    "vtt",
                    models.TextField(
                        default="",
                        help_text="Paste the full transcript in VTT format.",
                        verbose_name="vtt file",
                    ),
                ),
                ("language", models.CharField(max_length=5)),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="archive.resource",
                    ),
                ),
            ],
            options={
                "verbose_name": "transcript",
                "verbose_name_plural": "transcripts",
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                (
                    "description",
                    models.TextField(default="", verbose_name="description"),
                ),
                (
                    "resources",
                    models.ManyToManyField(
                        to="archive.resource", verbose_name="resources"
                    ),
                ),
            ],
            options={
                "verbose_name": "collection",
                "verbose_name_plural": "collections",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="archive_col_name_311250_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="resource",
            index=models.Index(fields=["title"], name="archive_res_title_d94d90_idx"),
        ),
    ]
